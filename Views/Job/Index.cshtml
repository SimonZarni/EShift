@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@model IEnumerable<EShift123.Models.Job>

@{
    ViewData["Title"] = "Jobs";
    var currentFilterStatus = ViewData["CurrentFilterStatus"] as string;
    var allStatuses = new List<string> { "InProgress", "Completed", "Cancelled" };

    // Pagination specific variables
    int currentPage = (int)ViewData["CurrentPage"];
    int totalPages = (int)ViewData["TotalPages"];
    bool hasPreviousPage = (bool)ViewData["HasPreviousPage"];
    bool hasNextPage = (bool)ViewData["HasNextPage"];
}

<div class="container py-5">
    <h1 class="text-center mb-4 text-primary">Jobs (Admin View)</h1>

    <p class="text-center mb-4">
        <a asp-action="Create" class="btn btn-success rounded-2 shadow-sm">
            Create New Job
        </a>
    </p>

    <form asp-action="Index" method="get" class="d-flex align-items-center">
        <label for="statusFilter" class="form-label me-2 mb-0">Filter by Status:</label>
        <select name="status" id="statusFilter" class="form-select me-2" onchange="this.form.submit()">
            <option value="">All Statuses</option>
            @foreach (var status in allStatuses)
            {
                <option value="@status" selected="@(status == currentFilterStatus)">
                    @status
                </option>
            }
        </select>
        <button type="submit" class="btn btn-primary">Apply Filter</button>
        <a asp-action="Index" class="btn btn-secondary">Reset Filter</a>
    </form>

    <div class="table-responsive rounded-3 shadow-sm border">
        <table class="table table-striped table-hover mb-0">
            <thead class="table-light">
                <tr>
                    <th scope="col" class="py-3 px-3">
                        @Html.DisplayNameFor(model => model.JobId)
                    </th>
                    <th scope="col" class="py-3 px-3">
                        @Html.DisplayNameFor(model => model.Customer.Name)
                    </th>
                    <th scope="col" class="py-3 px-3">
                        @Html.DisplayNameFor(model => model.StartLocation)
                    </th>
                    <th scope="col" class="py-3 px-3">
                        @Html.DisplayNameFor(model => model.Destination)
                    </th>
                    <th scope="col" class="py-3 px-3">
                        @Html.DisplayNameFor(model => model.JobDate)
                    </th>
                    <th scope="col" class="py-3 px-3">
                        @Html.DisplayNameFor(model => model.Status)
                    </th>
                    <th scope="col" class="py-3 px-3">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="py-3 px-3">
                            @Html.DisplayFor(modelItem => item.JobId)
                        </td>
                        <td class="py-3 px-3">
                            @Html.DisplayFor(modelItem => item.Customer.Name)
                        </td>
                        <td class="py-3 px-3">
                            @Html.DisplayFor(modelItem => item.StartLocation)
                        </td>
                        <td class="py-3 px-3">
                            @Html.DisplayFor(modelItem => item.Destination)
                        </td>
                        <td class="py-3 px-3">
                            @Html.DisplayFor(modelItem => item.JobDate)
                        </td>
                        <td class="py-3 px-3">
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td class="py-3 px-3">
                            <a asp-action="Edit" asp-route-id="@item.JobId" class="btn btn-sm btn-primary">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.JobId" class="btn btn-sm btn-info">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.JobId" class="btn btn-sm btn-danger">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <nav aria-label="Page navigation" class="mt-4">
        <ul class="pagination justify-content-center">
            <li class="page-item @(hasPreviousPage ? "" : "disabled")">
                <a class="page-link" asp-action="Index"
                   asp-route-pageNumber="@(currentPage - 1)"
                   asp-route-status="@currentFilterStatus" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>

            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" asp-action="Index"
                       asp-route-pageNumber="@i"
                       asp-route-status="@currentFilterStatus">@i</a>
                </li>
            }

            <li class="page-item @(hasNextPage ? "" : "disabled")">
                <a class="page-link" asp-action="Index"
                   asp-route-pageNumber="@(currentPage + 1)"
                   asp-route-status="@currentFilterStatus" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
</div>
